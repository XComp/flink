# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Build and Test Apache Flink"

on:
  workflow_call:
    inputs:
      environment:
        description: "defines environment variables for downstream scripts"
        required: true
        type: string
      jdk-version:
        description: "the jdk version to use"
        required: true
        type: number
    secrets:
      s3_bucket:
        required: false
      s3_access_key:
        required: false
      s3_secret_key:
        required: false
      glue_schema_access_key:
        required: false
      glue_schema_secret_key:
        required: false

permissions: read-all

env:
  MAVEN_ARGS: -Dmaven.repo.local=/home/runner/.m2/repository
  FLINK_ARTIFACT_FILENAME: flink_artifacts.tar.gz
  DOCKER_IMAGES_CACHE_FOLDER: .docker-cache

jobs:
  qa:
    name: "Basic QA"
    runs-on: ubuntu-latest

    steps:
      - name: "Flink Checkout"
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ inputs.jdk-version }}

      - name: "Setup Maven package cache"
        uses: actions/cache@v3
        with:
          path: /home/runner/.m2/repository
          key: gha-runner-only-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: "Codestyle"
        run: |
          ${{ inputs.environment }} ./tools/ci/validate.sh "checkstyle:check spotless:check -T2" || exit $?

      - name: "License Headers"
        if: (success() || failure())
        run: |
          ${{ inputs.environment }} ./tools/ci/validate.sh "org.apache.rat:apache-rat-plugin:check -N" || exit $?

  compile:
    name: "Compile"
    runs-on: ubuntu-latest
    timeout-minutes: 240
    outputs:
      stringified-workflow-name: ${{ steps.workflow-prep-step.outputs.stringified-workflow-name }}
    steps:
      - name: "Flink Checkout"
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: "Stringify workflow name"
        id: workflow-prep-step
        run: |
          stringified_workflow_name=$(echo "${{ github.workflow }}" | tr -C '[:alnum:]._' '-' |  tr '[:upper:]' '[:lower:]' | sed -e 's/--*/-/g' -e 's/^-*//g' -e 's/-*$//g')
          echo "stringified-workflow-name=${stringified_workflow_name}" >> $GITHUB_OUTPUT

      - name: "DEBUG #0"
        run: |
          echo "HOME: ${HOME}"
          
          echo "find:"
          find ${HOME} -maxdepth 3

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: ${{ inputs.jdk-version }}

      - name: "Setup Maven package cache"
        uses: actions/cache@v3
        with:
          path: /home/runner/.m2/repository
          key: gha-runner-only-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: "DEBUG #0"
        run: |
          echo "HOME: ${HOME}"
          
          echo "find:"
          find ${HOME} -maxdepth 3

      - name: "Compile Flink"
        run: |
          ${{ inputs.environment }} ./tools/ci/validate.sh "test-compile -Dflink.markBundledAsOptional=false -Dfast" || exit $?

      - name: "Collect build artifacts"
        run: |
          ./tools/azure-pipelines/create_build_artifact.sh -f ${{ runner.temp }}/${{ env.FLINK_ARTIFACT_FILENAME }}

      - name: "Upload artifacts to make them available in downstream jobs"
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-${{ steps.workflow-prep-step.outputs.stringified-workflow-name }}-${{ github.run_number }}
          path: ${{ runner.temp }}/${{ env.FLINK_ARTIFACT_FILENAME }}
          if-no-files-found: error
